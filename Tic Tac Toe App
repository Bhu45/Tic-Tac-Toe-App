<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tic-Tac-Toe</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f0f0;
        }
        .container {
            text-align: center;
        }
        .board {
            display: grid;
            grid-template-columns: repeat(3, 100px);
            grid-template-rows: repeat(3, 100px);
            gap: 5px;
        }
        .cell {
            width: 100px;
            height: 100px;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 2rem;
            background-color: white;
            border: 2px solid #333;
            cursor: pointer;
        }
        .cell:hover {
            background-color: #ddd;
        }
        .status {
            margin-top: 20px;
            font-size: 1.5rem;
        }
        button {
            margin-top: 10px;
            padding: 10px 20px;
            font-size: 1rem;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Tic-Tac-Toe</h1>
        <div class="board" id="board"></div>
        <div class="status" id="status">Player X's turn</div>
        <button onclick="resetGame()">Restart Game</button>
    </div>
    <script>
        const board = document.getElementById("board");
        const status = document.getElementById("status");
        let currentPlayer = "X";
        let cells = Array(9).fill(null);
        
        function createBoard() {
            board.innerHTML = "";
            cells.forEach((cell, index) => {
                const div = document.createElement("div");
                div.classList.add("cell");
                div.dataset.index = index;
                div.addEventListener("click", makeMove);
                board.appendChild(div);
            });
        }
        
        function makeMove(event) {
            const index = event.target.dataset.index;
            if (!cells[index]) {
                cells[index] = currentPlayer;
                event.target.textContent = currentPlayer;
                if (checkWinner()) {
                    status.textContent = `Player ${currentPlayer} wins!`;
                    board.removeEventListener("click", makeMove);
                } else if (cells.every(cell => cell)) {
                    status.textContent = "It's a draw!";
                } else {
                    currentPlayer = currentPlayer === "X" ? "O" : "X";
                    status.textContent = `Player ${currentPlayer}'s turn`;
                }
            }
        }
        
        function checkWinner() {
            const winPatterns = [
                [0, 1, 2], [3, 4, 5], [6, 7, 8],
                [0, 3, 6], [1, 4, 7], [2, 5, 8],
                [0, 4, 8], [2, 4, 6]
            ];
            return winPatterns.some(pattern => {
                const [a, b, c] = pattern;
                return cells[a] && cells[a] === cells[b] && cells[a] === cells[c];
            });
        }
        
        function resetGame() {
            cells.fill(null);
            currentPlayer = "X";
            status.textContent = "Player X's turn";
            createBoard();
        }
        
        createBoard();
    </script>
</body>
</html>
